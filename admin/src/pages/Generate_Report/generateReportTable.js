import React, { useEffect, useState } from "react"
import { Row, Col, Card, CardBody, CardTitle, Table, Button } from "reactstrap";
import { connect } from "react-redux";
import { setBreadcrumbItems } from "../../store/actions";
import { Toaster, toast } from "sonner";
import {BASE_URL} from '../../Service';

const GenerateReportTable = (props) => {
    document.title = "Generated Reports | Lexa - Responsive Bootstrap 5 Admin Dashboard";
    
    const breadcrumbItems = [
        { title: "Lexa", link: "#" },
        { title: "Generated Reports", link: "#" },
    ]

    const [reportData, setReportData] = useState([]);
    const [loading, setLoading] = useState(true);
    const [pagination, setPagination] = useState({
        current_page: 1,
        total: 0,
        per_page: 10
    });

    const fetchReportData = async (page = 1) => {
        try {
            setLoading(true);
            const response = await fetch(`${BASE_URL}/generated-reports?page=${page}`);
            const result = await response.json();
            
            if (result.data && Array.isArray(result.data.data)) {
                setReportData(result.data.data);
                setPagination({
                    current_page: result.data.current_page,
                    total: result.data.total,
                    per_page: result.data.per_page
                });
                console.log("Generated reports loaded:", result.data.data);
            } else {
                setReportData([]);
                console.warn("Unexpected data format:", result);
            }
        } catch (error) {
            console.error("Error fetching generated reports:", error);
            setReportData([]);
        } finally {
            setLoading(false);
        }
    };

    const handleDelete = async (reportId) => {
        try {
            if (window.confirm('Are you sure you want to delete this report?')) {
                const response = await fetch(`${BASE_URL}/generated-reports/${reportId}`, {
                    method: 'DELETE',
                    headers: {
                        'Accept': 'application/json',
                    },
                });

                if (response.ok) {
                    
                    fetchReportData();
                    toast.success("Generated report deleted successfully!");
                } else {
                    const errorData = await response.json();
                    alert(`Error deleting report: ${errorData.message || 'Unknown error'}`);
                }
            }
        } catch (error) {
            console.error('Error deleting report:', error);
            alert('Error deleting report. Please try again.');
        }
    };

    useEffect(() => {
        props.setBreadcrumbItems('Generated Reports', breadcrumbItems);
        fetchReportData();
    }, []);

    const formatDate = (dateString) => {
        if (!dateString) return 'N/A';
        const date = new Date(dateString);
        return date.toLocaleDateString() + ' ' + date.toLocaleTimeString();
    };

    return (
        <React.Fragment>
            <Toaster position="top-right" richColors />
            <Row style={{ minHeight: '70vh' }}>
                <Col>
                    <Card>
                        <CardBody>
                            <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '10px' }}>
                                <CardTitle className="h4 mb-0">Generated Reports</CardTitle>
                                <Button 
    color="primary" 
    onClick={props.onAddReportClick}
>
    <i className="bx bx-plus me-1"></i> Add Report
</Button>
                            </div>
                            
                            {loading ? (
                                <div className="text-center">Loading generated reports...</div>
                            ) : (
                                <div className="table-responsive">
                                    <Table className="table table-striped table-bordered">
                                        <thead>
                                            <tr>
                                                <th>Report Name</th>
                                                <th>Template ID</th>
                                                <th>Generated By</th>
                                                <th>Generation Date</th>
                                                <th>File Path</th>
                                                <th>Actions</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            {reportData.length > 0 ? (
                                                reportData.map(report => (
                                                    <tr key={report.id}>
                                                        <td>{report.report_name || 'N/A'}</td>
                                                        <td>{report.template.template_name || 'N/A'}</td>
                                                        <td>{report.generated_by.name || 'N/A'}</td>
                                                        <td>{formatDate(report.generation_date)}</td>
                                                        <td>{report.file_path || 'N/A'}</td>
                                                        <td>
                                                        <Button 
        color="primary" 
        size="sm" 
        onClick={() => props.onEditReportClick(report)}
        className="me-2"
    >
        <i className="bx bx-edit"></i> Edit
    </Button>
                                                            <Button 
                                                                color="danger" 
                                                                size="sm" 
                                                                onClick={() => handleDelete(report.id)}
                                                            >
                                                                <i className="bx bx-trash"></i> Delete
                                                            </Button>
                                                        </td>
                                                    </tr>
                                                ))
                                            ) : (
                                                <tr>
                                                    <td colSpan="6" className="text-center">No generated reports available</td>
                                                </tr>
                                            )}
                                        </tbody>
                                    </Table>
                                </div>
                            )}
                        </CardBody>
                    </Card>
                </Col>
            </Row>
        </React.Fragment>
    )
}

export default connect(null, { setBreadcrumbItems })(GenerateReportTable);